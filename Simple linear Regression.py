# -*- coding: utf-8 -*-
"""GPA Prediction - Simple Linear Regression.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/14VuYWY9r4ECUJuiGNhCBVsjia4ypjgFJ

#**SIMPLE LINEAR REGRESSION**

This is a simple data set with two columns - SAT score and GPA. The objective is to create a regression model to predict a person's future GPA with SAT score

###Importing Libraries
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

"""###Loading Data"""

data = pd.read_csv('/content/datasets_141319_332156_1.01. Simple linear regression.csv')

print(data)

"""###Checking for Potential Null Values"""

null_columns=data.columns[data.isnull().any()]

print(data[data.isnull().any(axis=1)][null_columns].head())

"""###Splitting Training and Test Data"""

#Splitting the dependent and independent variables
X = data.iloc[ :, : -1].values
Y = data.iloc[:, -1].values

#Splitting Training and Test data
from sklearn.model_selection import train_test_split
X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size = 0.3, random_state = 1)

"""###Training the Regression Model"""

from sklearn.linear_model import LinearRegression
regressor = LinearRegression()
regressor.fit(X_train, Y_train)

"""###Predicting on Test Data"""

Y_pred = regressor.predict(X_test)

"""###Visualizing the Training Set"""

plt.scatter(X_train, Y_train, color='red')
plt.plot(X_train, regressor.predict(X_train), color='blue', scaley=True)
plt.title('SAT score vs GPA (Training set)')
plt.xlabel('SAT Score')
plt.ylabel('GPA')
plt.show()

"""###Visualizing the Testing Data"""

plt.scatter(X_test, Y_test, color='red')
plt.plot(X_train, regressor.predict(X_train), color='blue')
plt.title('SAT score vs GPA (Training set)')
plt.xlabel('SAT Score')
plt.ylabel('GPA')
plt.show()

"""###Predicting a New Data"""

new_data = pd.DataFrame(data = [2010, 1850], columns = ['SAT'])
regressor.predict(new_data)

"""The Predicted GPA for the SAT scores 2010 and 1850 are 3.59 and 3.31"""

